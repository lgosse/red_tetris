// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlayerForm PlayerForm component should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayerForm
    player={
      Object {
        "nickname": "test",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          center={true}
          color="accent"
          gameFont={true}
          padding="20px"
          size="20px"
        >
          Enter your player nickname
        </styled.div>,
        <styled.div
          flex={true}
        >
          <styled.div />
          <styled.div>
            <styled.input
              id="nicknameInput"
              maxLength="10"
              name="nickname"
              onChange={[Function]}
              placeholder="Nickname..."
              value="test"
            />
          </styled.div>
          <styled.div />
        </styled.div>,
      ],
      "padding": "20px",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "center": true,
          "children": "Enter your player nickname",
          "color": "accent",
          "gameFont": true,
          "padding": "20px",
          "size": "20px",
        },
        "ref": null,
        "rendered": "Enter your player nickname",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.div>
              <styled.input
                id="nicknameInput"
                maxLength="10"
                name="nickname"
                onChange={[Function]}
                placeholder="Nickname..."
                value="test"
              />
            </styled.div>,
            <styled.div />,
          ],
          "flex": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <styled.input
                id="nicknameInput"
                maxLength="10"
                name="nickname"
                onChange={[Function]}
                placeholder="Nickname..."
                value="test"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "nicknameInput",
                "maxLength": "10",
                "name": "nickname",
                "onChange": [Function],
                "placeholder": "Nickname...",
                "value": "test",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            center={true}
            color="accent"
            gameFont={true}
            padding="20px"
            size="20px"
          >
            Enter your player nickname
          </styled.div>,
          <styled.div
            flex={true}
          >
            <styled.div />
            <styled.div>
              <styled.input
                id="nicknameInput"
                maxLength="10"
                name="nickname"
                onChange={[Function]}
                placeholder="Nickname..."
                value="test"
              />
            </styled.div>
            <styled.div />
          </styled.div>,
        ],
        "padding": "20px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "center": true,
            "children": "Enter your player nickname",
            "color": "accent",
            "gameFont": true,
            "padding": "20px",
            "size": "20px",
          },
          "ref": null,
          "rendered": "Enter your player nickname",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.div>
                <styled.input
                  id="nicknameInput"
                  maxLength="10"
                  name="nickname"
                  onChange={[Function]}
                  placeholder="Nickname..."
                  value="test"
                />
              </styled.div>,
              <styled.div />,
            ],
            "flex": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <styled.input
                  id="nicknameInput"
                  maxLength="10"
                  name="nickname"
                  onChange={[Function]}
                  placeholder="Nickname..."
                  value="test"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "nicknameInput",
                  "maxLength": "10",
                  "name": "nickname",
                  "onChange": [Function],
                  "placeholder": "Nickname...",
                  "value": "test",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
