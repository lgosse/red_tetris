// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <RedTetrisHeader />,
        <HexaSeparator />,
        <RedTetrisPreview />,
        <BeginAdventure />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <RedTetrisHeader />,
          <HexaSeparator />,
          <RedTetrisPreview />,
          <BeginAdventure />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render PlayersList render should render as expected with leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              }
            }
          >
            <Styled(FaIcon)
              className="hourglass-half"
              marginRight="6px"
              width="20px"
            />
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
            <styled.div
              style={
                Object {
                  "paddingRight": "10px",
                }
              }
            >
              <styled.div
                size="16px"
                style={
                  Object {
                    "paddingRight": "6px",
                  }
                }
              >
                ms
              </styled.div>
              <Styled(FaIcon)
                className="signal"
              />
            </styled.div>
            <div
              onClick={[Function]}
            >
              <Styled(FaIcon)
                className="times"
                clickable={true}
              />
            </div>
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />,
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>,
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "hourglass-half",
                  "marginRight": "6px",
                  "width": "20px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>,
                    <Styled(FaIcon)
                      className="signal"
                    />,
                  ],
                  "style": Object {
                    "paddingRight": "10px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        "ms",
                      ],
                      "size": "16px",
                      "style": Object {
                        "paddingRight": "6px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      "ms",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "signal",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "times",
                    "clickable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "maxWidth": "400px",
                    "padding": "16px",
                    "width": "250px",
                  }
                }
              >
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Styled(FaIcon)
                    className="hourglass-half"
                    marginRight="6px"
                    width="20px"
                  />,
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  <styled.div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>
                    <Styled(FaIcon)
                      className="signal"
                    />
                  </styled.div>,
                  <div
                    onClick={[Function]}
                  >
                    <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />
                  </div>,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "hourglass-half",
                    "marginRight": "6px",
                    "width": "20px",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.div
                        size="16px"
                        style={
                          Object {
                            "paddingRight": "6px",
                          }
                        }
                      >
                        ms
                      </styled.div>,
                      <Styled(FaIcon)
                        className="signal"
                      />,
                    ],
                    "style": Object {
                      "paddingRight": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          undefined,
                          "ms",
                        ],
                        "size": "16px",
                        "style": Object {
                          "paddingRight": "6px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                        "ms",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "signal",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "times",
                      "clickable": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render PlayersList render should render as expected without leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "padding": "16px",
                "width": "200px",
              }
            }
          >
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "wcnjn-T8ENU4iD1XAAAC",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "padding": "16px",
                  "width": "200px",
                }
              }
            >
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                false,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "padding": "16px",
                "width": "200px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "padding": "16px",
                  "width": "200px",
                }
              }
            >
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "wcnjn-T8ENU4iD1XAAAC",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "padding": "16px",
                    "width": "200px",
                  }
                }
              >
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  false,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "padding": "16px",
                  "width": "200px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render RoomView render should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoomView
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          width="200px"
        >
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div />
          </styled.div>
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div />
          </styled.div>
        </styled.div>,
        <styled.div />,
        <styled.div>
          <styled.div
            bold={true}
            center={true}
            color="primary"
            gameFont={true}
            size="26px"
          >
            Sasuke
          </styled.div>
          <PlayersList
            actualPlayer={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              }
            }
            kickPlayer={[Function]}
            players={
              Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ]
            }
            style={
              Object {
                "padding": "20px",
              }
            }
          />
        </styled.div>,
        <styled.div />,
        <styled.div
          width="200px"
        >
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>,
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>,
          ],
          "width": "200px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div
              bold={true}
              center={true}
              color="primary"
              gameFont={true}
              size="26px"
            >
              Sasuke
            </styled.div>,
            <PlayersList
              actualPlayer={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              kickPlayer={[Function]}
              players={
                Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ]
              }
              style={
                Object {
                  "padding": "20px",
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bold": true,
              "center": true,
              "children": "Sasuke",
              "color": "primary",
              "gameFont": true,
              "size": "26px",
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "actualPlayer": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              },
              "kickPlayer": [Function],
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "style": Object {
                "padding": "20px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
          ],
          "width": "200px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            width="200px"
          >
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>
          </styled.div>,
          <styled.div />,
          <styled.div>
            <styled.div
              bold={true}
              center={true}
              color="primary"
              gameFont={true}
              size="26px"
            >
              Sasuke
            </styled.div>
            <PlayersList
              actualPlayer={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              kickPlayer={[Function]}
              players={
                Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ]
              }
              style={
                Object {
                  "padding": "20px",
                }
              }
            />
          </styled.div>,
          <styled.div />,
          <styled.div
            width="200px"
          >
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div />
              </styled.div>,
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div />
              </styled.div>,
            ],
            "width": "200px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                bold={true}
                center={true}
                color="primary"
                gameFont={true}
                size="26px"
              >
                Sasuke
              </styled.div>,
              <PlayersList
                actualPlayer={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Naruto",
                    "socketId": "different id",
                  }
                }
                kickPlayer={[Function]}
                players={
                  Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ]
                }
                style={
                  Object {
                    "padding": "20px",
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bold": true,
                "center": true,
                "children": "Sasuke",
                "color": "primary",
                "gameFont": true,
                "size": "26px",
              },
              "ref": null,
              "rendered": "Sasuke",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "actualPlayer": Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                },
                "kickPlayer": [Function],
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "style": Object {
                  "padding": "20px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
            ],
            "width": "200px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render ToggleOpenPartyButton render should render as expected with leadership and party closed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render ToggleOpenPartyButton render should render as expected with leadership and party opened 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "CLOSE GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "CLOSE GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "CLOSE GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "CLOSE GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render ToggleOpenPartyButton render should render as expected without leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lobby
    beginParty={[Function]}
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "myid",
        "nickname": "Naruto",
        "socketId": "socket different",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          padding="20px"
        >
          <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />
        </styled.div>,
        <styled.div>
          <styled.div />
          <ReadyButton
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
            toggleReadyClick={undefined}
          />
          <styled.div />
        </styled.div>,
        <div />,
        <styled.div>
          <styled.div />
          <styled.button
            onClick={[Function]}
            primary={true}
            style={
              Object {
                "margin": "16px",
              }
            }
          >
            SHOW RULES
          </styled.button>
          <styled.div />
        </styled.div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />,
          "padding": "20px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "kickPlayer": [Function],
            "party": Object {
              "__v": 3,
              "_id": "5a73305e4dbfed22aa7d0df5",
              "name": "Sasuke",
              "open": false,
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "playing": true,
              "size": 10,
            },
            "player": Object {
              "_id": "myid",
              "nickname": "Naruto",
              "socketId": "socket different",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <ReadyButton
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleReadyClick={undefined}
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
              "toggleReadyClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.button
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "SHOW RULES",
              "onClick": [Function],
              "primary": true,
              "style": Object {
                "margin": "16px",
              },
            },
            "ref": null,
            "rendered": "SHOW RULES",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            padding="20px"
          >
            <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />
          </styled.div>,
          <styled.div>
            <styled.div />
            <ReadyButton
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleReadyClick={undefined}
            />
            <styled.div />
          </styled.div>,
          <div />,
          <styled.div>
            <styled.div />
            <styled.button
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>
            <styled.div />
          </styled.div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />,
            "padding": "20px",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "kickPlayer": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <ReadyButton
                player={
                  Object {
                    "_id": "myid",
                    "nickname": "Naruto",
                    "socketId": "socket different",
                  }
                }
                toggleReadyClick={undefined}
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "player": Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                },
                "toggleReadyClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.button
                onClick={[Function]}
                primary={true}
                style={
                  Object {
                    "margin": "16px",
                  }
                }
              >
                SHOW RULES
              </styled.button>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "SHOW RULES",
                "onClick": [Function],
                "primary": true,
                "style": Object {
                  "margin": "16px",
                },
              },
              "ref": null,
              "rendered": "SHOW RULES",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Lobby render should render as expected without leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lobby
    beginParty={[Function]}
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "myid",
        "nickname": "Naruto",
        "socketId": "socket different",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          padding="20px"
        >
          <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />
        </styled.div>,
        <styled.div>
          <styled.div />
          <TogglePartyOpenButton
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
            toggleOpenParty={[Function]}
          />
          <BeginPartyButton
            beginParty={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />,
          "padding": "20px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "kickPlayer": [Function],
            "party": Object {
              "__v": 3,
              "_id": "5a73305e4dbfed22aa7d0df5",
              "name": "Sasuke",
              "open": false,
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "playing": true,
              "size": 10,
            },
            "player": Object {
              "_id": "myid",
              "nickname": "Naruto",
              "socketId": "socket different",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <TogglePartyOpenButton
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleOpenParty={[Function]}
            />,
            <BeginPartyButton
              beginParty={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
              "toggleOpenParty": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "beginParty": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            padding="20px"
          >
            <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />
          </styled.div>,
          <styled.div>
            <styled.div />
            <TogglePartyOpenButton
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleOpenParty={[Function]}
            />
            <BeginPartyButton
              beginParty={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />,
            "padding": "20px",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "kickPlayer": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <TogglePartyOpenButton
                party={
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": true,
                    "size": 10,
                  }
                }
                player={
                  Object {
                    "_id": "myid",
                    "nickname": "Naruto",
                    "socketId": "socket different",
                  }
                }
                toggleOpenParty={[Function]}
              />,
              <BeginPartyButton
                beginParty={[Function]}
                party={
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": true,
                    "size": 10,
                  }
                }
                player={
                  Object {
                    "_id": "myid",
                    "nickname": "Naruto",
                    "socketId": "socket different",
                  }
                }
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "party": Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                },
                "player": Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                },
                "toggleOpenParty": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "beginParty": [Function],
                "party": Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                },
                "player": Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`NewGame should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewGame />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <Connect(PlayerForm) />
        </styled.div>,
        <styled.div>
          <styled.div />
          <styled.div>
            <Link
              id="create-party-link"
              replace={false}
              to="create-game"
            >
              <styled.button
                marginTop="20px"
                primary={true}
                width="100%"
              >
                CREATE A NEW GAME
              </styled.button>
            </Link>
            <styled.div
              center={true}
              color="accent"
              gameFont={true}
              padding="20px"
              size="20px"
            >
              OR
            </styled.div>
            <Link
              id="party-list-link"
              replace={false}
              to="game-list"
            >
              <styled.button
                primary={true}
                width="100%"
              >
                JOIN A GAME
              </styled.button>
            </Link>
          </styled.div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(PlayerForm) />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.div>
              <Link
                id="create-party-link"
                replace={false}
                to="create-game"
              >
                <styled.button
                  marginTop="20px"
                  primary={true}
                  width="100%"
                >
                  CREATE A NEW GAME
                </styled.button>
              </Link>
              <styled.div
                center={true}
                color="accent"
                gameFont={true}
                padding="20px"
                size="20px"
              >
                OR
              </styled.div>
              <Link
                id="party-list-link"
                replace={false}
                to="game-list"
              >
                <styled.button
                  primary={true}
                  width="100%"
                >
                  JOIN A GAME
                </styled.button>
              </Link>
            </styled.div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Link
                  id="create-party-link"
                  replace={false}
                  to="create-game"
                >
                  <styled.button
                    marginTop="20px"
                    primary={true}
                    width="100%"
                  >
                    CREATE A NEW GAME
                  </styled.button>
                </Link>,
                <styled.div
                  center={true}
                  color="accent"
                  gameFont={true}
                  padding="20px"
                  size="20px"
                >
                  OR
                </styled.div>,
                <Link
                  id="party-list-link"
                  replace={false}
                  to="game-list"
                >
                  <styled.button
                    primary={true}
                    width="100%"
                  >
                    JOIN A GAME
                  </styled.button>
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <styled.button
                    marginTop="20px"
                    primary={true}
                    width="100%"
                  >
                    CREATE A NEW GAME
                  </styled.button>,
                  "id": "create-party-link",
                  "replace": false,
                  "to": "create-game",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "CREATE A NEW GAME",
                    "marginTop": "20px",
                    "primary": true,
                    "width": "100%",
                  },
                  "ref": null,
                  "rendered": "CREATE A NEW GAME",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "center": true,
                  "children": "OR",
                  "color": "accent",
                  "gameFont": true,
                  "padding": "20px",
                  "size": "20px",
                },
                "ref": null,
                "rendered": "OR",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <styled.button
                    primary={true}
                    width="100%"
                  >
                    JOIN A GAME
                  </styled.button>,
                  "id": "party-list-link",
                  "replace": false,
                  "to": "game-list",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "JOIN A GAME",
                    "primary": true,
                    "width": "100%",
                  },
                  "ref": null,
                  "rendered": "JOIN A GAME",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <Connect(PlayerForm) />
          </styled.div>,
          <styled.div>
            <styled.div />
            <styled.div>
              <Link
                id="create-party-link"
                replace={false}
                to="create-game"
              >
                <styled.button
                  marginTop="20px"
                  primary={true}
                  width="100%"
                >
                  CREATE A NEW GAME
                </styled.button>
              </Link>
              <styled.div
                center={true}
                color="accent"
                gameFont={true}
                padding="20px"
                size="20px"
              >
                OR
              </styled.div>
              <Link
                id="party-list-link"
                replace={false}
                to="game-list"
              >
                <styled.button
                  primary={true}
                  width="100%"
                >
                  JOIN A GAME
                </styled.button>
              </Link>
            </styled.div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(PlayerForm) />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.div>
                <Link
                  id="create-party-link"
                  replace={false}
                  to="create-game"
                >
                  <styled.button
                    marginTop="20px"
                    primary={true}
                    width="100%"
                  >
                    CREATE A NEW GAME
                  </styled.button>
                </Link>
                <styled.div
                  center={true}
                  color="accent"
                  gameFont={true}
                  padding="20px"
                  size="20px"
                >
                  OR
                </styled.div>
                <Link
                  id="party-list-link"
                  replace={false}
                  to="game-list"
                >
                  <styled.button
                    primary={true}
                    width="100%"
                  >
                    JOIN A GAME
                  </styled.button>
                </Link>
              </styled.div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Link
                    id="create-party-link"
                    replace={false}
                    to="create-game"
                  >
                    <styled.button
                      marginTop="20px"
                      primary={true}
                      width="100%"
                    >
                      CREATE A NEW GAME
                    </styled.button>
                  </Link>,
                  <styled.div
                    center={true}
                    color="accent"
                    gameFont={true}
                    padding="20px"
                    size="20px"
                  >
                    OR
                  </styled.div>,
                  <Link
                    id="party-list-link"
                    replace={false}
                    to="game-list"
                  >
                    <styled.button
                      primary={true}
                      width="100%"
                    >
                      JOIN A GAME
                    </styled.button>
                  </Link>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <styled.button
                      marginTop="20px"
                      primary={true}
                      width="100%"
                    >
                      CREATE A NEW GAME
                    </styled.button>,
                    "id": "create-party-link",
                    "replace": false,
                    "to": "create-game",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "CREATE A NEW GAME",
                      "marginTop": "20px",
                      "primary": true,
                      "width": "100%",
                    },
                    "ref": null,
                    "rendered": "CREATE A NEW GAME",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "center": true,
                    "children": "OR",
                    "color": "accent",
                    "gameFont": true,
                    "padding": "20px",
                    "size": "20px",
                  },
                  "ref": null,
                  "rendered": "OR",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <styled.button
                      primary={true}
                      width="100%"
                    >
                      JOIN A GAME
                    </styled.button>,
                    "id": "party-list-link",
                    "replace": false,
                    "to": "game-list",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "JOIN A GAME",
                      "primary": true,
                      "width": "100%",
                    },
                    "ref": null,
                    "rendered": "JOIN A GAME",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`NotFound should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotFound />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div>
          404
        </styled.div>,
        <styled.div>
          We're sorry but your requested page is unknown to us :(
        </styled.div>,
      ],
      "style": Object {
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "404",
        },
        "ref": null,
        "rendered": "404",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "We're sorry but your requested page is unknown to us :(",
        },
        "ref": null,
        "rendered": "We're sorry but your requested page is unknown to us :(",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div>
            404
          </styled.div>,
          <styled.div>
            We're sorry but your requested page is unknown to us :(
          </styled.div>,
        ],
        "style": Object {
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "404",
          },
          "ref": null,
          "rendered": "404",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "We're sorry but your requested page is unknown to us :(",
          },
          "ref": null,
          "rendered": "We're sorry but your requested page is unknown to us :(",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Party render should render as expected with party not playing & endingDisplay 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": true,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Lobby) />,
        <EndingModal
          closeModal={undefined}
          ending={
            Object {
              "shouldDisplay": true,
            }
          }
        />,
        <span />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "closeModal": undefined,
          "ending": Object {
            "shouldDisplay": true,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Lobby) />,
          <EndingModal
            closeModal={undefined}
            ending={
              Object {
                "shouldDisplay": true,
              }
            }
          />,
          <span />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "closeModal": undefined,
            "ending": Object {
              "shouldDisplay": true,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Party render should render as expected with party not playing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": false,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Lobby) />,
        <span />,
        <span />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Lobby) />,
          <span />,
          <span />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Party render should render as expected with party playing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": true,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Game) />,
        <span />,
        <span />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Game) />,
          <span />,
          <span />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList render PartyButton should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButton
    goToParty={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.button
        disabled={true}
        margin="10px"
        onClick={[Function]}
        primary={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
        width="400px"
      >
        <div
          style={
            Object {
              "flex": 1,
              "textAlign": "left",
            }
          }
        >
          Sasuke
        </div>
        <div>
          Players: 
          1
           / 
          10
        </div>
      </styled.button>,
      "replace": false,
      "style": Object {
        "pointerEvents": "none",
        "textDecoration": "none",
      },
      "to": "/#Sasuke[Naruto]",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>,
          <div>
            Players: 
            1
             / 
            10
          </div>,
        ],
        "disabled": true,
        "margin": "10px",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
        },
        "width": "400px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sasuke",
            "style": Object {
              "flex": 1,
              "textAlign": "left",
            },
          },
          "ref": null,
          "rendered": "Sasuke",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Players: ",
            1,
            " / ",
            10,
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.button
          disabled={true}
          margin="10px"
          onClick={[Function]}
          primary={true}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
          width="400px"
        >
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>
          <div>
            Players: 
            1
             / 
            10
          </div>
        </styled.button>,
        "replace": false,
        "style": Object {
          "pointerEvents": "none",
          "textDecoration": "none",
        },
        "to": "/#Sasuke[Naruto]",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "flex": 1,
                  "textAlign": "left",
                }
              }
            >
              Sasuke
            </div>,
            <div>
              Players: 
              1
               / 
              10
            </div>,
          ],
          "disabled": true,
          "margin": "10px",
          "onClick": [Function],
          "primary": true,
          "style": Object {
            "display": "flex",
            "flexDirection": "row",
          },
          "width": "400px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sasuke",
              "style": Object {
                "flex": 1,
                "textAlign": "left",
              },
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Players: ",
                1,
                " / ",
                10,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList render PartyButton should render as expected with nickname 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButton
    goToParty={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.button
        className="join-button"
        disabled={true}
        margin="10px"
        primary={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
        width="400px"
      >
        <div
          style={
            Object {
              "flex": 1,
              "textAlign": "left",
            }
          }
        >
          Sasuke
        </div>
        <div>
          Players: 
          1
           / 
          10
        </div>
      </styled.button>,
      "replace": false,
      "style": Object {
        "pointerEvents": "none",
        "textDecoration": "none",
      },
      "to": "/#Sasuke[Naruto]",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>,
          <div>
            Players: 
            1
             / 
            10
          </div>,
          undefined,
        ],
        "className": "join-button",
        "disabled": true,
        "margin": "10px",
        "primary": true,
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
        },
        "width": "400px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sasuke",
            "style": Object {
              "flex": 1,
              "textAlign": "left",
            },
          },
          "ref": null,
          "rendered": "Sasuke",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Players: ",
            1,
            " / ",
            10,
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.button
          className="join-button"
          disabled={true}
          margin="10px"
          primary={true}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
          width="400px"
        >
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>
          <div>
            Players: 
            1
             / 
            10
          </div>
        </styled.button>,
        "replace": false,
        "style": Object {
          "pointerEvents": "none",
          "textDecoration": "none",
        },
        "to": "/#Sasuke[Naruto]",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "flex": 1,
                  "textAlign": "left",
                }
              }
            >
              Sasuke
            </div>,
            <div>
              Players: 
              1
               / 
              10
            </div>,
            undefined,
          ],
          "className": "join-button",
          "disabled": true,
          "margin": "10px",
          "primary": true,
          "style": Object {
            "display": "flex",
            "flexDirection": "row",
          },
          "width": "400px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sasuke",
              "style": Object {
                "flex": 1,
                "textAlign": "left",
              },
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Players: ",
                1,
                " / ",
                10,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList render PartyButton should render as expected without nickname 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButton
    goToParty={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.button
        className="join-button"
        disabled={true}
        margin="10px"
        primary={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
        width="400px"
      >
        <div
          style={
            Object {
              "flex": 1,
              "textAlign": "left",
            }
          }
        >
          Sasuke
        </div>
        <div>
          Players: 
          1
           / 
          10
        </div>
      </styled.button>,
      "replace": false,
      "style": Object {
        "pointerEvents": "none",
        "textDecoration": "none",
      },
      "to": "/#Sasuke[Unknown]",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>,
          <div>
            Players: 
            1
             / 
            10
          </div>,
          undefined,
        ],
        "className": "join-button",
        "disabled": true,
        "margin": "10px",
        "primary": true,
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
        },
        "width": "400px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sasuke",
            "style": Object {
              "flex": 1,
              "textAlign": "left",
            },
          },
          "ref": null,
          "rendered": "Sasuke",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Players: ",
            1,
            " / ",
            10,
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.button
          className="join-button"
          disabled={true}
          margin="10px"
          primary={true}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
          width="400px"
        >
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>
          <div>
            Players: 
            1
             / 
            10
          </div>
        </styled.button>,
        "replace": false,
        "style": Object {
          "pointerEvents": "none",
          "textDecoration": "none",
        },
        "to": "/#Sasuke[Unknown]",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "flex": 1,
                  "textAlign": "left",
                }
              }
            >
              Sasuke
            </div>,
            <div>
              Players: 
              1
               / 
              10
            </div>,
            undefined,
          ],
          "className": "join-button",
          "disabled": true,
          "margin": "10px",
          "primary": true,
          "style": Object {
            "display": "flex",
            "flexDirection": "row",
          },
          "width": "400px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sasuke",
              "style": Object {
                "flex": 1,
                "textAlign": "left",
              },
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Players: ",
                1,
                " / ",
                10,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList render should render as expected with no parties 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyList
    goToParty={[Function]}
    partyList={Array []}
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div />
        <div>
          <NoParties />
        </div>
        <styled.div />
      </styled.div>,
      "padding": "40px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <div>
            <NoParties />
          </div>,
          <styled.div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NoParties />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div />
          <div>
            <NoParties />
          </div>
          <styled.div />
        </styled.div>,
        "padding": "40px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div>
              <NoParties />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NoParties />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList render should render as expected with parties 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyList
    goToParty={[Function]}
    partyList={
      Array [
        Object {
          "__v": 3,
          "_id": "5a73305e4dbfed22aa7d0df5",
          "name": "Sasuke",
          "open": false,
          "players": Array [
            Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          ],
          "playing": false,
          "size": 10,
        },
      ]
    }
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div />
        <div>
          <PartyListMap
            partyList={
              Array [
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                },
              ]
            }
            player={
              Object {
                "nickname": "Naruto",
                "socketId": "toto",
              }
            }
          />
        </div>
        <styled.div />
      </styled.div>,
      "padding": "40px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <div>
            <PartyListMap
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />
          </div>,
          <styled.div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <PartyListMap
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "partyList": Array [
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                },
              ],
              "player": Object {
                "nickname": "Naruto",
                "socketId": "toto",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div />
          <div>
            <PartyListMap
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />
          </div>
          <styled.div />
        </styled.div>,
        "padding": "40px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div>
              <PartyListMap
                partyList={
                  Array [
                    Object {
                      "__v": 3,
                      "_id": "5a73305e4dbfed22aa7d0df5",
                      "name": "Sasuke",
                      "open": false,
                      "players": Array [
                        Object {
                          "_id": "5a73305e4dbfed22aa7d0df6",
                          "nickname": "Sakura",
                          "socketId": "wcnjn-T8ENU4iD1XAAAC",
                        },
                      ],
                      "playing": false,
                      "size": 10,
                    },
                  ]
                }
                player={
                  Object {
                    "nickname": "Naruto",
                    "socketId": "toto",
                  }
                }
              />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <PartyListMap
                partyList={
                  Array [
                    Object {
                      "__v": 3,
                      "_id": "5a73305e4dbfed22aa7d0df5",
                      "name": "Sasuke",
                      "open": false,
                      "players": Array [
                        Object {
                          "_id": "5a73305e4dbfed22aa7d0df6",
                          "nickname": "Sakura",
                          "socketId": "wcnjn-T8ENU4iD1XAAAC",
                        },
                      ],
                      "playing": false,
                      "size": 10,
                    },
                  ]
                }
                player={
                  Object {
                    "nickname": "Naruto",
                    "socketId": "toto",
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "partyList": Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ],
                "player": Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList render should render as expected with parties and leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyList
    goToParty={[Function]}
    partyList={
      Array [
        Object {
          "__v": 3,
          "_id": "5a73305e4dbfed22aa7d0df5",
          "name": "Konoha",
          "open": false,
          "players": Array [
            Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          ],
          "playing": false,
          "size": 10,
        },
      ]
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div />
        <div>
          <PartyListMap
            goToParty={[Function]}
            partyList={
              Array [
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Konoha",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                },
              ]
            }
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "toto",
              }
            }
          />
        </div>
        <styled.div />
      </styled.div>,
      "padding": "40px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <div>
            <PartyListMap
              goToParty={[Function]}
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Konoha",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />
          </div>,
          <styled.div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <PartyListMap
              goToParty={[Function]}
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Konoha",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "goToParty": [Function],
              "partyList": Array [
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Konoha",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                },
              ],
              "player": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "toto",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div />
          <div>
            <PartyListMap
              goToParty={[Function]}
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Konoha",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />
          </div>
          <styled.div />
        </styled.div>,
        "padding": "40px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div>
              <PartyListMap
                goToParty={[Function]}
                partyList={
                  Array [
                    Object {
                      "__v": 3,
                      "_id": "5a73305e4dbfed22aa7d0df5",
                      "name": "Konoha",
                      "open": false,
                      "players": Array [
                        Object {
                          "_id": "5a73305e4dbfed22aa7d0df6",
                          "nickname": "Sakura",
                          "socketId": "wcnjn-T8ENU4iD1XAAAC",
                        },
                      ],
                      "playing": false,
                      "size": 10,
                    },
                  ]
                }
                player={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Naruto",
                    "socketId": "toto",
                  }
                }
              />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <PartyListMap
                goToParty={[Function]}
                partyList={
                  Array [
                    Object {
                      "__v": 3,
                      "_id": "5a73305e4dbfed22aa7d0df5",
                      "name": "Konoha",
                      "open": false,
                      "players": Array [
                        Object {
                          "_id": "5a73305e4dbfed22aa7d0df6",
                          "nickname": "Sakura",
                          "socketId": "wcnjn-T8ENU4iD1XAAAC",
                        },
                      ],
                      "playing": false,
                      "size": 10,
                    },
                  ]
                }
                player={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Naruto",
                    "socketId": "toto",
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "goToParty": [Function],
                "partyList": Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Konoha",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ],
                "player": Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "toto",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`PartyList should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyList
    goToParty={[Function]}
    partyList={
      Array [
        Object {
          "name": "toto",
        },
        Object {
          "name": "tata",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div />
        <div>
          <PartyListMap
            goToParty={[Function]}
            partyList={
              Array [
                Object {
                  "name": "toto",
                },
                Object {
                  "name": "tata",
                },
              ]
            }
            player={undefined}
          />
        </div>
        <styled.div />
      </styled.div>,
      "padding": "40px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <div>
            <PartyListMap
              goToParty={[Function]}
              partyList={
                Array [
                  Object {
                    "name": "toto",
                  },
                  Object {
                    "name": "tata",
                  },
                ]
              }
              player={undefined}
            />
          </div>,
          <styled.div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <PartyListMap
              goToParty={[Function]}
              partyList={
                Array [
                  Object {
                    "name": "toto",
                  },
                  Object {
                    "name": "tata",
                  },
                ]
              }
              player={undefined}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "goToParty": [Function],
              "partyList": Array [
                Object {
                  "name": "toto",
                },
                Object {
                  "name": "tata",
                },
              ],
              "player": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div />
          <div>
            <PartyListMap
              goToParty={[Function]}
              partyList={
                Array [
                  Object {
                    "name": "toto",
                  },
                  Object {
                    "name": "tata",
                  },
                ]
              }
              player={undefined}
            />
          </div>
          <styled.div />
        </styled.div>,
        "padding": "40px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div>
              <PartyListMap
                goToParty={[Function]}
                partyList={
                  Array [
                    Object {
                      "name": "toto",
                    },
                    Object {
                      "name": "tata",
                    },
                  ]
                }
                player={undefined}
              />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <PartyListMap
                goToParty={[Function]}
                partyList={
                  Array [
                    Object {
                      "name": "toto",
                    },
                    Object {
                      "name": "tata",
                    },
                  ]
                }
                player={undefined}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "goToParty": [Function],
                "partyList": Array [
                  Object {
                    "name": "toto",
                  },
                  Object {
                    "name": "tata",
                  },
                ],
                "player": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Ranking should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Ranking
    ranking={
      Array [
        Object {
          "date": "djhbva",
          "playerName": "test",
          "score": 0,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Ranks
        ranking={
          Array [
            Object {
              "date": "djhbva",
              "playerName": "test",
              "score": 0,
            },
          ]
        }
      />,
      "padding": "20px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "ranking": Array [
          Object {
            "date": "djhbva",
            "playerName": "test",
            "score": 0,
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Ranks
          ranking={
            Array [
              Object {
                "date": "djhbva",
                "playerName": "test",
                "score": 0,
              },
            ]
          }
        />,
        "padding": "20px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "ranking": Array [
            Object {
              "date": "djhbva",
              "playerName": "test",
              "score": 0,
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views CreateParty should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateParty />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <Connect(PartyForm) />
      </styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Connect(PartyForm) />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <Connect(PartyForm) />
        </styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(PartyForm) />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Home should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <RedTetrisHeader />,
        <HexaSeparator />,
        <RedTetrisPreview />,
        <BeginAdventure />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <RedTetrisHeader />,
          <HexaSeparator />,
          <RedTetrisPreview />,
          <BeginAdventure />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby BeginPartyButton should render as expected with player not ready 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BeginPartyButton
    player={
      Object {
        "ready": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "BEGIN GAME",
      "disabled": undefined,
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "BEGIN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "BEGIN GAME",
        "disabled": undefined,
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "BEGIN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby BeginPartyButton should render as expected with player ready 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BeginPartyButton
    player={
      Object {
        "ready": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "BEGIN GAME",
      "disabled": undefined,
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "BEGIN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "BEGIN GAME",
        "disabled": undefined,
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "BEGIN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby Lobby should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lobby
    beginParty={[Function]}
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "myid",
        "nickname": "Naruto",
        "socketId": "socket different",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          padding="20px"
        >
          <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />
        </styled.div>,
        <styled.div>
          <styled.div />
          <ReadyButton
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
            toggleReadyClick={undefined}
          />
          <styled.div />
        </styled.div>,
        <div />,
        <styled.div>
          <styled.div />
          <styled.button
            onClick={[Function]}
            primary={true}
            style={
              Object {
                "margin": "16px",
              }
            }
          >
            SHOW RULES
          </styled.button>
          <styled.div />
        </styled.div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />,
          "padding": "20px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "kickPlayer": [Function],
            "party": Object {
              "__v": 3,
              "_id": "5a73305e4dbfed22aa7d0df5",
              "name": "Sasuke",
              "open": false,
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "playing": true,
              "size": 10,
            },
            "player": Object {
              "_id": "myid",
              "nickname": "Naruto",
              "socketId": "socket different",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <ReadyButton
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleReadyClick={undefined}
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
              "toggleReadyClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.button
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "SHOW RULES",
              "onClick": [Function],
              "primary": true,
              "style": Object {
                "margin": "16px",
              },
            },
            "ref": null,
            "rendered": "SHOW RULES",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            padding="20px"
          >
            <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />
          </styled.div>,
          <styled.div>
            <styled.div />
            <ReadyButton
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleReadyClick={undefined}
            />
            <styled.div />
          </styled.div>,
          <div />,
          <styled.div>
            <styled.div />
            <styled.button
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>
            <styled.div />
          </styled.div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />,
            "padding": "20px",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "kickPlayer": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <ReadyButton
                player={
                  Object {
                    "_id": "myid",
                    "nickname": "Naruto",
                    "socketId": "socket different",
                  }
                }
                toggleReadyClick={undefined}
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "player": Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                },
                "toggleReadyClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.button
                onClick={[Function]}
                primary={true}
                style={
                  Object {
                    "margin": "16px",
                  }
                }
              >
                SHOW RULES
              </styled.button>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "SHOW RULES",
                "onClick": [Function],
                "primary": true,
                "style": Object {
                  "margin": "16px",
                },
              },
              "ref": null,
              "rendered": "SHOW RULES",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby Lobby should render as expected with leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lobby
    beginParty={[Function]}
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          padding="20px"
        >
          <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Sakura",
                "socketId": "wcnjn-T8ENU4iD1XAAAC",
              }
            }
          />
        </styled.div>,
        <styled.div>
          <styled.div />
          <ReadyButton
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Sakura",
                "socketId": "wcnjn-T8ENU4iD1XAAAC",
              }
            }
            toggleReadyClick={undefined}
          />
          <styled.div />
        </styled.div>,
        <styled.div>
          <styled.div />
          <TogglePartyOpenButton
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            toggleOpenParty={[Function]}
          />
          <BeginPartyButton
            beginParty={[Function]}
            disabled={true}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
          />
          <styled.div />
        </styled.div>,
        <styled.div>
          <styled.div />
          <styled.button
            onClick={undefined}
            primary={true}
            style={
              Object {
                "margin": "16px",
              }
            }
          >
            SHOW RULES
          </styled.button>
          <styled.div />
        </styled.div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Sakura",
                "socketId": "wcnjn-T8ENU4iD1XAAAC",
              }
            }
          />,
          "padding": "20px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "kickPlayer": [Function],
            "party": Object {
              "__v": 3,
              "_id": "5a73305e4dbfed22aa7d0df5",
              "name": "Sasuke",
              "open": false,
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "playing": true,
              "size": 10,
            },
            "player": Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <ReadyButton
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                }
              }
              toggleReadyClick={undefined}
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "player": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Sakura",
                "socketId": "wcnjn-T8ENU4iD1XAAAC",
              },
              "toggleReadyClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <TogglePartyOpenButton
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              toggleOpenParty={[Function]}
            />,
            <BeginPartyButton
              beginParty={[Function]}
              disabled={true}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "toggleOpenParty": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "beginParty": [Function],
              "disabled": true,
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.button
              onClick={undefined}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "SHOW RULES",
              "onClick": undefined,
              "primary": true,
              "style": Object {
                "margin": "16px",
              },
            },
            "ref": null,
            "rendered": "SHOW RULES",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            padding="20px"
          >
            <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                }
              }
            />
          </styled.div>,
          <styled.div>
            <styled.div />
            <ReadyButton
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                }
              }
              toggleReadyClick={undefined}
            />
            <styled.div />
          </styled.div>,
          <styled.div>
            <styled.div />
            <TogglePartyOpenButton
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              toggleOpenParty={[Function]}
            />
            <BeginPartyButton
              beginParty={[Function]}
              disabled={true}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
            />
            <styled.div />
          </styled.div>,
          <styled.div>
            <styled.div />
            <styled.button
              onClick={undefined}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>
            <styled.div />
          </styled.div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                }
              }
            />,
            "padding": "20px",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "kickPlayer": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Sakura",
                "socketId": "wcnjn-T8ENU4iD1XAAAC",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <ReadyButton
                player={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  }
                }
                toggleReadyClick={undefined}
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "player": Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
                "toggleReadyClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <TogglePartyOpenButton
                party={
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": true,
                    "size": 10,
                  }
                }
                toggleOpenParty={[Function]}
              />,
              <BeginPartyButton
                beginParty={[Function]}
                disabled={true}
                party={
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": true,
                    "size": 10,
                  }
                }
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "party": Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                },
                "toggleOpenParty": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "beginParty": [Function],
                "disabled": true,
                "party": Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.button
                onClick={undefined}
                primary={true}
                style={
                  Object {
                    "margin": "16px",
                  }
                }
              >
                SHOW RULES
              </styled.button>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "SHOW RULES",
                "onClick": undefined,
                "primary": true,
                "style": Object {
                  "margin": "16px",
                },
              },
              "ref": null,
              "rendered": "SHOW RULES",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby Lobby should render as expected without leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lobby
    beginParty={[Function]}
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          padding="20px"
        >
          <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": false,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              }
            }
          />
        </styled.div>,
        <styled.div>
          <styled.div />
          <ReadyButton
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              }
            }
            toggleReadyClick={undefined}
          />
          <styled.div />
        </styled.div>,
        <div />,
        <styled.div>
          <styled.div />
          <styled.button
            onClick={undefined}
            primary={true}
            style={
              Object {
                "margin": "16px",
              }
            }
          >
            SHOW RULES
          </styled.button>
          <styled.div />
        </styled.div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": false,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              }
            }
          />,
          "padding": "20px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "kickPlayer": [Function],
            "party": Object {
              "__v": 3,
              "_id": "5a73305e4dbfed22aa7d0df5",
              "name": "Sasuke",
              "open": false,
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "playing": false,
              "size": 10,
            },
            "player": Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Naruto",
              "socketId": "different id",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <ReadyButton
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              toggleReadyClick={undefined}
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "player": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              },
              "toggleReadyClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.button
              onClick={undefined}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "SHOW RULES",
              "onClick": undefined,
              "primary": true,
              "style": Object {
                "margin": "16px",
              },
            },
            "ref": null,
            "rendered": "SHOW RULES",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            padding="20px"
          >
            <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
            />
          </styled.div>,
          <styled.div>
            <styled.div />
            <ReadyButton
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              toggleReadyClick={undefined}
            />
            <styled.div />
          </styled.div>,
          <div />,
          <styled.div>
            <styled.div />
            <styled.button
              onClick={undefined}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>
            <styled.div />
          </styled.div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
            />,
            "padding": "20px",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "kickPlayer": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": false,
                "size": 10,
              },
              "player": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <ReadyButton
                player={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Naruto",
                    "socketId": "different id",
                  }
                }
                toggleReadyClick={undefined}
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "player": Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                },
                "toggleReadyClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.button
                onClick={undefined}
                primary={true}
                style={
                  Object {
                    "margin": "16px",
                  }
                }
              >
                SHOW RULES
              </styled.button>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "SHOW RULES",
                "onClick": undefined,
                "primary": true,
                "style": Object {
                  "margin": "16px",
                },
              },
              "ref": null,
              "rendered": "SHOW RULES",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby PlayersList should render as expected with owner rights 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "ready": false,
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              }
            }
          >
            <Styled(FaIcon)
              className="hourglass-half"
              marginRight="6px"
              width="20px"
            />
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
            <styled.div
              style={
                Object {
                  "paddingRight": "10px",
                }
              }
            >
              <styled.div
                size="16px"
                style={
                  Object {
                    "paddingRight": "6px",
                  }
                }
              >
                ms
              </styled.div>
              <Styled(FaIcon)
                className="signal"
              />
            </styled.div>
            <div
              onClick={[Function]}
            >
              <Styled(FaIcon)
                className="times"
                clickable={true}
              />
            </div>
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />,
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>,
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "hourglass-half",
                  "marginRight": "6px",
                  "width": "20px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>,
                    <Styled(FaIcon)
                      className="signal"
                    />,
                  ],
                  "style": Object {
                    "paddingRight": "10px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        "ms",
                      ],
                      "size": "16px",
                      "style": Object {
                        "paddingRight": "6px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      "ms",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "signal",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "times",
                    "clickable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "maxWidth": "400px",
                    "padding": "16px",
                    "width": "250px",
                  }
                }
              >
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Styled(FaIcon)
                    className="hourglass-half"
                    marginRight="6px"
                    width="20px"
                  />,
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  <styled.div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>
                    <Styled(FaIcon)
                      className="signal"
                    />
                  </styled.div>,
                  <div
                    onClick={[Function]}
                  >
                    <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />
                  </div>,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "hourglass-half",
                    "marginRight": "6px",
                    "width": "20px",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.div
                        size="16px"
                        style={
                          Object {
                            "paddingRight": "6px",
                          }
                        }
                      >
                        ms
                      </styled.div>,
                      <Styled(FaIcon)
                        className="signal"
                      />,
                    ],
                    "style": Object {
                      "paddingRight": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          undefined,
                          "ms",
                        ],
                        "size": "16px",
                        "style": Object {
                          "paddingRight": "6px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                        "ms",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "signal",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "times",
                      "clickable": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby PlayersList should render as expected with player not ready 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "ready": false,
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              }
            }
          >
            <Styled(FaIcon)
              className="hourglass-half"
              marginRight="6px"
              width="20px"
            />
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
            <styled.div
              style={
                Object {
                  "paddingRight": "10px",
                }
              }
            >
              <styled.div
                size="16px"
                style={
                  Object {
                    "paddingRight": "6px",
                  }
                }
              >
                ms
              </styled.div>
              <Styled(FaIcon)
                className="signal"
              />
            </styled.div>
            <div
              onClick={[Function]}
            >
              <Styled(FaIcon)
                className="times"
                clickable={true}
              />
            </div>
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />,
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>,
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "hourglass-half",
                  "marginRight": "6px",
                  "width": "20px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>,
                    <Styled(FaIcon)
                      className="signal"
                    />,
                  ],
                  "style": Object {
                    "paddingRight": "10px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        "ms",
                      ],
                      "size": "16px",
                      "style": Object {
                        "paddingRight": "6px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      "ms",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "signal",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "times",
                    "clickable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "maxWidth": "400px",
                    "padding": "16px",
                    "width": "250px",
                  }
                }
              >
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Styled(FaIcon)
                    className="hourglass-half"
                    marginRight="6px"
                    width="20px"
                  />,
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  <styled.div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>
                    <Styled(FaIcon)
                      className="signal"
                    />
                  </styled.div>,
                  <div
                    onClick={[Function]}
                  >
                    <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />
                  </div>,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "hourglass-half",
                    "marginRight": "6px",
                    "width": "20px",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.div
                        size="16px"
                        style={
                          Object {
                            "paddingRight": "6px",
                          }
                        }
                      >
                        ms
                      </styled.div>,
                      <Styled(FaIcon)
                        className="signal"
                      />,
                    ],
                    "style": Object {
                      "paddingRight": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          undefined,
                          "ms",
                        ],
                        "size": "16px",
                        "style": Object {
                          "paddingRight": "6px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                        "ms",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "signal",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "times",
                      "clickable": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby PlayersList should render as expected with player ready 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "ready": true,
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              }
            }
          >
            <Styled(FaIcon)
              className="check"
              marginRight="6px"
              width="20px"
            />
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
            <styled.div
              style={
                Object {
                  "paddingRight": "10px",
                }
              }
            >
              <styled.div
                size="16px"
                style={
                  Object {
                    "paddingRight": "6px",
                  }
                }
              >
                ms
              </styled.div>
              <Styled(FaIcon)
                className="signal"
              />
            </styled.div>
            <div
              onClick={[Function]}
            >
              <Styled(FaIcon)
                className="times"
                clickable={true}
              />
            </div>
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="check"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Styled(FaIcon)
                  className="check"
                  marginRight="6px"
                  width="20px"
                />,
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>,
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "check",
                  "marginRight": "6px",
                  "width": "20px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>,
                    <Styled(FaIcon)
                      className="signal"
                    />,
                  ],
                  "style": Object {
                    "paddingRight": "10px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        "ms",
                      ],
                      "size": "16px",
                      "style": Object {
                        "paddingRight": "6px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      "ms",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "signal",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "times",
                    "clickable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="check"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "maxWidth": "400px",
                    "padding": "16px",
                    "width": "250px",
                  }
                }
              >
                <Styled(FaIcon)
                  className="check"
                  marginRight="6px"
                  width="20px"
                />
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Styled(FaIcon)
                    className="check"
                    marginRight="6px"
                    width="20px"
                  />,
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  <styled.div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>
                    <Styled(FaIcon)
                      className="signal"
                    />
                  </styled.div>,
                  <div
                    onClick={[Function]}
                  >
                    <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />
                  </div>,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "check",
                    "marginRight": "6px",
                    "width": "20px",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.div
                        size="16px"
                        style={
                          Object {
                            "paddingRight": "6px",
                          }
                        }
                      >
                        ms
                      </styled.div>,
                      <Styled(FaIcon)
                        className="signal"
                      />,
                    ],
                    "style": Object {
                      "paddingRight": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          undefined,
                          "ms",
                        ],
                        "size": "16px",
                        "style": Object {
                          "paddingRight": "6px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                        "ms",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "signal",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "times",
                      "clickable": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby PlayersList should render as expected without owner rights 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "toto",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "ready": false,
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              }
            }
          >
            <Styled(FaIcon)
              className="hourglass-half"
              marginRight="6px"
              width="20px"
            />
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
            <styled.div
              style={
                Object {
                  "paddingRight": "10px",
                }
              }
            >
              <styled.div
                size="16px"
                style={
                  Object {
                    "paddingRight": "6px",
                  }
                }
              >
                ms
              </styled.div>
              <Styled(FaIcon)
                className="signal"
              />
            </styled.div>
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />,
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>,
                false,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "hourglass-half",
                  "marginRight": "6px",
                  "width": "20px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>,
                    <Styled(FaIcon)
                      className="signal"
                    />,
                  ],
                  "style": Object {
                    "paddingRight": "10px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        "ms",
                      ],
                      "size": "16px",
                      "style": Object {
                        "paddingRight": "6px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      "ms",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "signal",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "maxWidth": "400px",
                    "padding": "16px",
                    "width": "250px",
                  }
                }
              >
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Styled(FaIcon)
                    className="hourglass-half"
                    marginRight="6px"
                    width="20px"
                  />,
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  <styled.div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>
                    <Styled(FaIcon)
                      className="signal"
                    />
                  </styled.div>,
                  false,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "hourglass-half",
                    "marginRight": "6px",
                    "width": "20px",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.div
                        size="16px"
                        style={
                          Object {
                            "paddingRight": "6px",
                          }
                        }
                      >
                        ms
                      </styled.div>,
                      <Styled(FaIcon)
                        className="signal"
                      />,
                    ],
                    "style": Object {
                      "paddingRight": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          undefined,
                          "ms",
                        ],
                        "size": "16px",
                        "style": Object {
                          "paddingRight": "6px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                        "ms",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "signal",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby RoomView should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoomView
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          width="200px"
        >
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div />
          </styled.div>
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div />
          </styled.div>
        </styled.div>,
        <styled.div />,
        <styled.div>
          <styled.div
            bold={true}
            center={true}
            color="primary"
            gameFont={true}
            size="26px"
          >
            Sasuke
          </styled.div>
          <PlayersList
            actualPlayer={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              }
            }
            kickPlayer={[Function]}
            players={
              Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ]
            }
            style={
              Object {
                "padding": "20px",
              }
            }
          />
        </styled.div>,
        <styled.div />,
        <styled.div
          width="200px"
        >
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>,
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>,
          ],
          "width": "200px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div
              bold={true}
              center={true}
              color="primary"
              gameFont={true}
              size="26px"
            >
              Sasuke
            </styled.div>,
            <PlayersList
              actualPlayer={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              kickPlayer={[Function]}
              players={
                Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ]
              }
              style={
                Object {
                  "padding": "20px",
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bold": true,
              "center": true,
              "children": "Sasuke",
              "color": "primary",
              "gameFont": true,
              "size": "26px",
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "actualPlayer": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              },
              "kickPlayer": [Function],
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "style": Object {
                "padding": "20px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
          ],
          "width": "200px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            width="200px"
          >
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>
          </styled.div>,
          <styled.div />,
          <styled.div>
            <styled.div
              bold={true}
              center={true}
              color="primary"
              gameFont={true}
              size="26px"
            >
              Sasuke
            </styled.div>
            <PlayersList
              actualPlayer={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              kickPlayer={[Function]}
              players={
                Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ]
              }
              style={
                Object {
                  "padding": "20px",
                }
              }
            />
          </styled.div>,
          <styled.div />,
          <styled.div
            width="200px"
          >
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div />
              </styled.div>,
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div />
              </styled.div>,
            ],
            "width": "200px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                bold={true}
                center={true}
                color="primary"
                gameFont={true}
                size="26px"
              >
                Sasuke
              </styled.div>,
              <PlayersList
                actualPlayer={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Naruto",
                    "socketId": "different id",
                  }
                }
                kickPlayer={[Function]}
                players={
                  Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ]
                }
                style={
                  Object {
                    "padding": "20px",
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bold": true,
                "center": true,
                "children": "Sasuke",
                "color": "primary",
                "gameFont": true,
                "size": "26px",
              },
              "ref": null,
              "rendered": "Sasuke",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "actualPlayer": Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                },
                "kickPlayer": [Function],
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "style": Object {
                  "padding": "20px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
            ],
            "width": "200px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby ToggleOpenPartyButton should render as expected with leadership and party closed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby ToggleOpenPartyButton should render as expected with leadership and party opened 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "CLOSE GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "CLOSE GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "CLOSE GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "CLOSE GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby ToggleOpenPartyButton should render as expected with party closed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "open": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby ToggleOpenPartyButton should render as expected with party open 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "open": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "CLOSE GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "CLOSE GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "CLOSE GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "CLOSE GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby ToggleOpenPartyButton should render as expected without leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby render PlayersList render should render as expected with leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayersList
    actualPlayer={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    kickPlayer={[Function]}
    players={
      Array [
        Object {
          "_id": "5a73305e4dbfed22aa7d0df6",
          "nickname": "Sakura",
          "socketId": "wcnjn-T8ENU4iD1XAAAC",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.div />
          <div
            style={
              Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              }
            }
          >
            <Styled(FaIcon)
              className="hourglass-half"
              marginRight="6px"
              width="20px"
            />
            <styled.div
              gameFont={true}
            >
              Sakura
            </styled.div>
            <styled.div />
            <styled.div
              style={
                Object {
                  "paddingRight": "10px",
                }
              }
            >
              <styled.div
                size="16px"
                style={
                  Object {
                    "paddingRight": "6px",
                  }
                }
              >
                ms
              </styled.div>
              <Styled(FaIcon)
                className="signal"
              />
            </styled.div>
            <div
              onClick={[Function]}
            >
              <Styled(FaIcon)
                className="times"
                clickable={true}
              />
            </div>
          </div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />,
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>,
                <styled.div />,
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>,
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>,
              ],
              "style": Object {
                "border": "1px solid #cd4436",
                "color": "#cd4436",
                "display": "flex",
                "flexDirection": "row",
                "margin": "8px",
                "maxWidth": "400px",
                "padding": "16px",
                "width": "250px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "hourglass-half",
                  "marginRight": "6px",
                  "width": "20px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sakura",
                  "gameFont": true,
                },
                "ref": null,
                "rendered": "Sakura",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>,
                    <Styled(FaIcon)
                      className="signal"
                    />,
                  ],
                  "style": Object {
                    "paddingRight": "10px",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        "ms",
                      ],
                      "size": "16px",
                      "style": Object {
                        "paddingRight": "6px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      "ms",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "signal",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "times",
                    "clickable": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.div />
            <div
              style={
                Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                }
              }
            >
              <Styled(FaIcon)
                className="hourglass-half"
                marginRight="6px"
                width="20px"
              />
              <styled.div
                gameFont={true}
              >
                Sakura
              </styled.div>
              <styled.div />
              <styled.div
                style={
                  Object {
                    "paddingRight": "10px",
                  }
                }
              >
                <styled.div
                  size="16px"
                  style={
                    Object {
                      "paddingRight": "6px",
                    }
                  }
                >
                  ms
                </styled.div>
                <Styled(FaIcon)
                  className="signal"
                />
              </styled.div>
              <div
                onClick={[Function]}
              >
                <Styled(FaIcon)
                  className="times"
                  clickable={true}
                />
              </div>
            </div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <div
                style={
                  Object {
                    "border": "1px solid #cd4436",
                    "color": "#cd4436",
                    "display": "flex",
                    "flexDirection": "row",
                    "margin": "8px",
                    "maxWidth": "400px",
                    "padding": "16px",
                    "width": "250px",
                  }
                }
              >
                <Styled(FaIcon)
                  className="hourglass-half"
                  marginRight="6px"
                  width="20px"
                />
                <styled.div
                  gameFont={true}
                >
                  Sakura
                </styled.div>
                <styled.div />
                <styled.div
                  style={
                    Object {
                      "paddingRight": "10px",
                    }
                  }
                >
                  <styled.div
                    size="16px"
                    style={
                      Object {
                        "paddingRight": "6px",
                      }
                    }
                  >
                    ms
                  </styled.div>
                  <Styled(FaIcon)
                    className="signal"
                  />
                </styled.div>
                <div
                  onClick={[Function]}
                >
                  <Styled(FaIcon)
                    className="times"
                    clickable={true}
                  />
                </div>
              </div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Styled(FaIcon)
                    className="hourglass-half"
                    marginRight="6px"
                    width="20px"
                  />,
                  <styled.div
                    gameFont={true}
                  >
                    Sakura
                  </styled.div>,
                  <styled.div />,
                  <styled.div
                    style={
                      Object {
                        "paddingRight": "10px",
                      }
                    }
                  >
                    <styled.div
                      size="16px"
                      style={
                        Object {
                          "paddingRight": "6px",
                        }
                      }
                    >
                      ms
                    </styled.div>
                    <Styled(FaIcon)
                      className="signal"
                    />
                  </styled.div>,
                  <div
                    onClick={[Function]}
                  >
                    <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />
                  </div>,
                ],
                "style": Object {
                  "border": "1px solid #cd4436",
                  "color": "#cd4436",
                  "display": "flex",
                  "flexDirection": "row",
                  "margin": "8px",
                  "maxWidth": "400px",
                  "padding": "16px",
                  "width": "250px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "hourglass-half",
                    "marginRight": "6px",
                    "width": "20px",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sakura",
                    "gameFont": true,
                  },
                  "ref": null,
                  "rendered": "Sakura",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <styled.div
                        size="16px"
                        style={
                          Object {
                            "paddingRight": "6px",
                          }
                        }
                      >
                        ms
                      </styled.div>,
                      <Styled(FaIcon)
                        className="signal"
                      />,
                    ],
                    "style": Object {
                      "paddingRight": "10px",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          undefined,
                          "ms",
                        ],
                        "size": "16px",
                        "style": Object {
                          "paddingRight": "6px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                        "ms",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "signal",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Styled(FaIcon)
                      className="times"
                      clickable={true}
                    />,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "times",
                      "clickable": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby render RoomView render should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RoomView
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          width="200px"
        >
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div />
          </styled.div>
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div />
          </styled.div>
        </styled.div>,
        <styled.div />,
        <styled.div>
          <styled.div
            bold={true}
            center={true}
            color="primary"
            gameFont={true}
            size="26px"
          >
            Sasuke
          </styled.div>
          <PlayersList
            actualPlayer={
              Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              }
            }
            kickPlayer={[Function]}
            players={
              Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ]
            }
            style={
              Object {
                "padding": "20px",
              }
            }
          />
        </styled.div>,
        <styled.div />,
        <styled.div
          width="200px"
        >
          <styled.div>
            <styled.div
              backgroundColor="primary"
            />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
          <styled.div>
            <styled.div />
            <styled.div
              backgroundColor="primary"
            />
          </styled.div>
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>,
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>,
          ],
          "width": "200px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div
              bold={true}
              center={true}
              color="primary"
              gameFont={true}
              size="26px"
            >
              Sasuke
            </styled.div>,
            <PlayersList
              actualPlayer={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              kickPlayer={[Function]}
              players={
                Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ]
              }
              style={
                Object {
                  "padding": "20px",
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bold": true,
              "center": true,
              "children": "Sasuke",
              "color": "primary",
              "gameFont": true,
              "size": "26px",
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "actualPlayer": Object {
                "_id": "5a73305e4dbfed22aa7d0df6",
                "nickname": "Naruto",
                "socketId": "different id",
              },
              "kickPlayer": [Function],
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "style": Object {
                "padding": "20px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>,
          ],
          "width": "200px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div
                  backgroundColor="primary"
                />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div
                  backgroundColor="primary"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "backgroundColor": "primary",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            width="200px"
          >
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div />
            </styled.div>
          </styled.div>,
          <styled.div />,
          <styled.div>
            <styled.div
              bold={true}
              center={true}
              color="primary"
              gameFont={true}
              size="26px"
            >
              Sasuke
            </styled.div>
            <PlayersList
              actualPlayer={
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                }
              }
              kickPlayer={[Function]}
              players={
                Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ]
              }
              style={
                Object {
                  "padding": "20px",
                }
              }
            />
          </styled.div>,
          <styled.div />,
          <styled.div
            width="200px"
          >
            <styled.div>
              <styled.div
                backgroundColor="primary"
              />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
            <styled.div>
              <styled.div />
              <styled.div
                backgroundColor="primary"
              />
            </styled.div>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div />
              </styled.div>,
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div />
              </styled.div>,
            ],
            "width": "200px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div
                bold={true}
                center={true}
                color="primary"
                gameFont={true}
                size="26px"
              >
                Sasuke
              </styled.div>,
              <PlayersList
                actualPlayer={
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Naruto",
                    "socketId": "different id",
                  }
                }
                kickPlayer={[Function]}
                players={
                  Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ]
                }
                style={
                  Object {
                    "padding": "20px",
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bold": true,
                "center": true,
                "children": "Sasuke",
                "color": "primary",
                "gameFont": true,
                "size": "26px",
              },
              "ref": null,
              "rendered": "Sasuke",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "actualPlayer": Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Naruto",
                  "socketId": "different id",
                },
                "kickPlayer": [Function],
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "style": Object {
                  "padding": "20px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <styled.div
                  backgroundColor="primary"
                />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
              <styled.div>
                <styled.div />
                <styled.div
                  backgroundColor="primary"
                />
              </styled.div>,
            ],
            "width": "200px",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    backgroundColor="primary"
                  />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div
                    backgroundColor="primary"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "backgroundColor": "primary",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby render ToggleOpenPartyButton render should render as expected with leadership and party closed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby render ToggleOpenPartyButton render should render as expected with leadership and party opened 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Sakura",
        "socketId": "wcnjn-T8ENU4iD1XAAAC",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "CLOSE GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "CLOSE GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "CLOSE GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "CLOSE GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby render ToggleOpenPartyButton render should render as expected without leadership 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TogglePartyOpenButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "5a73305e4dbfed22aa7d0df6",
        "nickname": "Naruto",
        "socketId": "different id",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "OPEN GAME",
      "onClick": [Function],
      "primary": true,
      "style": Object {
        "margin": "16px",
      },
    },
    "ref": null,
    "rendered": "OPEN GAME",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "OPEN GAME",
        "onClick": [Function],
        "primary": true,
        "style": Object {
          "margin": "16px",
        },
      },
      "ref": null,
      "rendered": "OPEN GAME",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Lobby render should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Lobby
    beginParty={[Function]}
    kickPlayer={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
    player={
      Object {
        "_id": "myid",
        "nickname": "Naruto",
        "socketId": "socket different",
      }
    }
    toggleOpenParty={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div
          padding="20px"
        >
          <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />
        </styled.div>,
        <styled.div>
          <styled.div />
          <ReadyButton
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
            toggleReadyClick={undefined}
          />
          <styled.div />
        </styled.div>,
        <div />,
        <styled.div>
          <styled.div />
          <styled.button
            onClick={[Function]}
            primary={true}
            style={
              Object {
                "margin": "16px",
              }
            }
          >
            SHOW RULES
          </styled.button>
          <styled.div />
        </styled.div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <RoomView
            kickPlayer={[Function]}
            party={
              Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              }
            }
            player={
              Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              }
            }
          />,
          "padding": "20px",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "kickPlayer": [Function],
            "party": Object {
              "__v": 3,
              "_id": "5a73305e4dbfed22aa7d0df5",
              "name": "Sasuke",
              "open": false,
              "players": Array [
                Object {
                  "_id": "5a73305e4dbfed22aa7d0df6",
                  "nickname": "Sakura",
                  "socketId": "wcnjn-T8ENU4iD1XAAAC",
                },
              ],
              "playing": true,
              "size": 10,
            },
            "player": Object {
              "_id": "myid",
              "nickname": "Naruto",
              "socketId": "socket different",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <ReadyButton
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleReadyClick={undefined}
            />,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
              "toggleReadyClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.button
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "SHOW RULES",
              "onClick": [Function],
              "primary": true,
              "style": Object {
                "margin": "16px",
              },
            },
            "ref": null,
            "rendered": "SHOW RULES",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div
            padding="20px"
          >
            <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />
          </styled.div>,
          <styled.div>
            <styled.div />
            <ReadyButton
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
              toggleReadyClick={undefined}
            />
            <styled.div />
          </styled.div>,
          <div />,
          <styled.div>
            <styled.div />
            <styled.button
              onClick={[Function]}
              primary={true}
              style={
                Object {
                  "margin": "16px",
                }
              }
            >
              SHOW RULES
            </styled.button>
            <styled.div />
          </styled.div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <RoomView
              kickPlayer={[Function]}
              party={
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": true,
                  "size": 10,
                }
              }
              player={
                Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                }
              }
            />,
            "padding": "20px",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "kickPlayer": [Function],
              "party": Object {
                "__v": 3,
                "_id": "5a73305e4dbfed22aa7d0df5",
                "name": "Sasuke",
                "open": false,
                "players": Array [
                  Object {
                    "_id": "5a73305e4dbfed22aa7d0df6",
                    "nickname": "Sakura",
                    "socketId": "wcnjn-T8ENU4iD1XAAAC",
                  },
                ],
                "playing": true,
                "size": 10,
              },
              "player": Object {
                "_id": "myid",
                "nickname": "Naruto",
                "socketId": "socket different",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <ReadyButton
                player={
                  Object {
                    "_id": "myid",
                    "nickname": "Naruto",
                    "socketId": "socket different",
                  }
                }
                toggleReadyClick={undefined}
              />,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "player": Object {
                  "_id": "myid",
                  "nickname": "Naruto",
                  "socketId": "socket different",
                },
                "toggleReadyClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.button
                onClick={[Function]}
                primary={true}
                style={
                  Object {
                    "margin": "16px",
                  }
                }
              >
                SHOW RULES
              </styled.button>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "SHOW RULES",
                "onClick": [Function],
                "primary": true,
                "style": Object {
                  "margin": "16px",
                },
              },
              "ref": null,
              "rendered": "SHOW RULES",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views NewGame should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewGame />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <Connect(PlayerForm) />
        </styled.div>,
        <styled.div>
          <styled.div />
          <styled.div>
            <Link
              id="create-party-link"
              replace={false}
              to="create-game"
            >
              <styled.button
                marginTop="20px"
                primary={true}
                width="100%"
              >
                CREATE A NEW GAME
              </styled.button>
            </Link>
            <styled.div
              center={true}
              color="accent"
              gameFont={true}
              padding="20px"
              size="20px"
            >
              OR
            </styled.div>
            <Link
              id="party-list-link"
              replace={false}
              to="game-list"
            >
              <styled.button
                primary={true}
                width="100%"
              >
                JOIN A GAME
              </styled.button>
            </Link>
          </styled.div>
          <styled.div />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(PlayerForm) />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <styled.div>
              <Link
                id="create-party-link"
                replace={false}
                to="create-game"
              >
                <styled.button
                  marginTop="20px"
                  primary={true}
                  width="100%"
                >
                  CREATE A NEW GAME
                </styled.button>
              </Link>
              <styled.div
                center={true}
                color="accent"
                gameFont={true}
                padding="20px"
                size="20px"
              >
                OR
              </styled.div>
              <Link
                id="party-list-link"
                replace={false}
                to="game-list"
              >
                <styled.button
                  primary={true}
                  width="100%"
                >
                  JOIN A GAME
                </styled.button>
              </Link>
            </styled.div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Link
                  id="create-party-link"
                  replace={false}
                  to="create-game"
                >
                  <styled.button
                    marginTop="20px"
                    primary={true}
                    width="100%"
                  >
                    CREATE A NEW GAME
                  </styled.button>
                </Link>,
                <styled.div
                  center={true}
                  color="accent"
                  gameFont={true}
                  padding="20px"
                  size="20px"
                >
                  OR
                </styled.div>,
                <Link
                  id="party-list-link"
                  replace={false}
                  to="game-list"
                >
                  <styled.button
                    primary={true}
                    width="100%"
                  >
                    JOIN A GAME
                  </styled.button>
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <styled.button
                    marginTop="20px"
                    primary={true}
                    width="100%"
                  >
                    CREATE A NEW GAME
                  </styled.button>,
                  "id": "create-party-link",
                  "replace": false,
                  "to": "create-game",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "CREATE A NEW GAME",
                    "marginTop": "20px",
                    "primary": true,
                    "width": "100%",
                  },
                  "ref": null,
                  "rendered": "CREATE A NEW GAME",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "center": true,
                  "children": "OR",
                  "color": "accent",
                  "gameFont": true,
                  "padding": "20px",
                  "size": "20px",
                },
                "ref": null,
                "rendered": "OR",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <styled.button
                    primary={true}
                    width="100%"
                  >
                    JOIN A GAME
                  </styled.button>,
                  "id": "party-list-link",
                  "replace": false,
                  "to": "game-list",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "JOIN A GAME",
                    "primary": true,
                    "width": "100%",
                  },
                  "ref": null,
                  "rendered": "JOIN A GAME",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <Connect(PlayerForm) />
          </styled.div>,
          <styled.div>
            <styled.div />
            <styled.div>
              <Link
                id="create-party-link"
                replace={false}
                to="create-game"
              >
                <styled.button
                  marginTop="20px"
                  primary={true}
                  width="100%"
                >
                  CREATE A NEW GAME
                </styled.button>
              </Link>
              <styled.div
                center={true}
                color="accent"
                gameFont={true}
                padding="20px"
                size="20px"
              >
                OR
              </styled.div>
              <Link
                id="party-list-link"
                replace={false}
                to="game-list"
              >
                <styled.button
                  primary={true}
                  width="100%"
                >
                  JOIN A GAME
                </styled.button>
              </Link>
            </styled.div>
            <styled.div />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(PlayerForm) />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div />,
              <styled.div>
                <Link
                  id="create-party-link"
                  replace={false}
                  to="create-game"
                >
                  <styled.button
                    marginTop="20px"
                    primary={true}
                    width="100%"
                  >
                    CREATE A NEW GAME
                  </styled.button>
                </Link>
                <styled.div
                  center={true}
                  color="accent"
                  gameFont={true}
                  padding="20px"
                  size="20px"
                >
                  OR
                </styled.div>
                <Link
                  id="party-list-link"
                  replace={false}
                  to="game-list"
                >
                  <styled.button
                    primary={true}
                    width="100%"
                  >
                    JOIN A GAME
                  </styled.button>
                </Link>
              </styled.div>,
              <styled.div />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Link
                    id="create-party-link"
                    replace={false}
                    to="create-game"
                  >
                    <styled.button
                      marginTop="20px"
                      primary={true}
                      width="100%"
                    >
                      CREATE A NEW GAME
                    </styled.button>
                  </Link>,
                  <styled.div
                    center={true}
                    color="accent"
                    gameFont={true}
                    padding="20px"
                    size="20px"
                  >
                    OR
                  </styled.div>,
                  <Link
                    id="party-list-link"
                    replace={false}
                    to="game-list"
                  >
                    <styled.button
                      primary={true}
                      width="100%"
                    >
                      JOIN A GAME
                    </styled.button>
                  </Link>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <styled.button
                      marginTop="20px"
                      primary={true}
                      width="100%"
                    >
                      CREATE A NEW GAME
                    </styled.button>,
                    "id": "create-party-link",
                    "replace": false,
                    "to": "create-game",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "CREATE A NEW GAME",
                      "marginTop": "20px",
                      "primary": true,
                      "width": "100%",
                    },
                    "ref": null,
                    "rendered": "CREATE A NEW GAME",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "center": true,
                    "children": "OR",
                    "color": "accent",
                    "gameFont": true,
                    "padding": "20px",
                    "size": "20px",
                  },
                  "ref": null,
                  "rendered": "OR",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <styled.button
                      primary={true}
                      width="100%"
                    >
                      JOIN A GAME
                    </styled.button>,
                    "id": "party-list-link",
                    "replace": false,
                    "to": "game-list",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "JOIN A GAME",
                      "primary": true,
                      "width": "100%",
                    },
                    "ref": null,
                    "rendered": "JOIN A GAME",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views NotFound should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotFound />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div>
          404
        </styled.div>,
        <styled.div>
          We're sorry but your requested page is unknown to us :(
        </styled.div>,
      ],
      "style": Object {
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "404",
        },
        "ref": null,
        "rendered": "404",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "We're sorry but your requested page is unknown to us :(",
        },
        "ref": null,
        "rendered": "We're sorry but your requested page is unknown to us :(",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div>
            404
          </styled.div>,
          <styled.div>
            We're sorry but your requested page is unknown to us :(
          </styled.div>,
        ],
        "style": Object {
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "404",
          },
          "ref": null,
          "rendered": "404",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "We're sorry but your requested page is unknown to us :(",
          },
          "ref": null,
          "rendered": "We're sorry but your requested page is unknown to us :(",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Party render should render as expected with party not playing & endingDisplay 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": true,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Lobby) />,
        <EndingModal
          closeModal={undefined}
          ending={
            Object {
              "shouldDisplay": true,
            }
          }
        />,
        <span />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "closeModal": undefined,
          "ending": Object {
            "shouldDisplay": true,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Lobby) />,
          <EndingModal
            closeModal={undefined}
            ending={
              Object {
                "shouldDisplay": true,
              }
            }
          />,
          <span />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "closeModal": undefined,
            "ending": Object {
              "shouldDisplay": true,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Party render should render as expected with party not playing & showRules 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": true,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "showRules": true,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Lobby) />,
        <EndingModal
          closeModal={undefined}
          ending={
            Object {
              "shouldDisplay": true,
            }
          }
        />,
        <RulesModal
          closeRules={undefined}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "closeModal": undefined,
          "ending": Object {
            "shouldDisplay": true,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "closeRules": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Lobby) />,
          <EndingModal
            closeModal={undefined}
            ending={
              Object {
                "shouldDisplay": true,
              }
            }
          />,
          <RulesModal
            closeRules={undefined}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "closeModal": undefined,
            "ending": Object {
              "shouldDisplay": true,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "closeRules": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Party render should render as expected with party not playing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": false,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Lobby) />,
        <span />,
        <span />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Lobby) />,
          <span />,
          <span />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Party render should render as expected with party playing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Party
    ending={
      Object {
        "shouldDisplay": true,
      }
    }
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": true,
        "size": 10,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Game) />,
        <span />,
        <span />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Game) />,
          <span />,
          <span />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render PartyButton should render as expected with nickname 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButton
    goToParty={[Function]}
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <styled.button
        className="join-button"
        disabled={true}
        margin="10px"
        primary={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
        width="400px"
      >
        <div
          style={
            Object {
              "flex": 1,
              "textAlign": "left",
            }
          }
        >
          Sasuke
        </div>
        <div>
          Players: 
          1
           / 
          10
        </div>
      </styled.button>,
      "party": Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      },
      "player": Object {
        "nickname": "Naruto",
        "socketId": "toto",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>,
          <div>
            Players: 
            1
             / 
            10
          </div>,
          undefined,
        ],
        "className": "join-button",
        "disabled": true,
        "margin": "10px",
        "primary": true,
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
        },
        "width": "400px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sasuke",
            "style": Object {
              "flex": 1,
              "textAlign": "left",
            },
          },
          "ref": null,
          "rendered": "Sasuke",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Players: ",
            1,
            " / ",
            10,
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <styled.button
          className="join-button"
          disabled={true}
          margin="10px"
          primary={true}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
          width="400px"
        >
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>
          <div>
            Players: 
            1
             / 
            10
          </div>
        </styled.button>,
        "party": Object {
          "__v": 3,
          "_id": "5a73305e4dbfed22aa7d0df5",
          "name": "Sasuke",
          "open": false,
          "players": Array [
            Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          ],
          "playing": false,
          "size": 10,
        },
        "player": Object {
          "nickname": "Naruto",
          "socketId": "toto",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "flex": 1,
                  "textAlign": "left",
                }
              }
            >
              Sasuke
            </div>,
            <div>
              Players: 
              1
               / 
              10
            </div>,
            undefined,
          ],
          "className": "join-button",
          "disabled": true,
          "margin": "10px",
          "primary": true,
          "style": Object {
            "display": "flex",
            "flexDirection": "row",
          },
          "width": "400px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sasuke",
              "style": Object {
                "flex": 1,
                "textAlign": "left",
              },
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Players: ",
                1,
                " / ",
                10,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render PartyButton should render as expected with party open but as much players as party size 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 1,
      }
    }
    player={
      Object {
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <styled.button
        className="join-button"
        disabled={true}
        margin="10px"
        primary={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
        width="400px"
      >
        <div
          style={
            Object {
              "flex": 1,
              "textAlign": "left",
            }
          }
        >
          Sasuke
        </div>
        <div>
          Players: 
          1
           / 
          1
        </div>
      </styled.button>,
      "party": Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 1,
      },
      "player": Object {
        "socketId": "toto",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>,
          <div>
            Players: 
            1
             / 
            1
          </div>,
          undefined,
        ],
        "className": "join-button",
        "disabled": true,
        "margin": "10px",
        "primary": true,
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
        },
        "width": "400px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sasuke",
            "style": Object {
              "flex": 1,
              "textAlign": "left",
            },
          },
          "ref": null,
          "rendered": "Sasuke",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Players: ",
              1,
              " / ",
              1,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Players: ",
            1,
            " / ",
            1,
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <styled.button
          className="join-button"
          disabled={true}
          margin="10px"
          primary={true}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
          width="400px"
        >
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>
          <div>
            Players: 
            1
             / 
            1
          </div>
        </styled.button>,
        "party": Object {
          "__v": 3,
          "_id": "5a73305e4dbfed22aa7d0df5",
          "name": "Sasuke",
          "open": true,
          "players": Array [
            Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          ],
          "playing": false,
          "size": 1,
        },
        "player": Object {
          "socketId": "toto",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "flex": 1,
                  "textAlign": "left",
                }
              }
            >
              Sasuke
            </div>,
            <div>
              Players: 
              1
               / 
              1
            </div>,
            undefined,
          ],
          "className": "join-button",
          "disabled": true,
          "margin": "10px",
          "primary": true,
          "style": Object {
            "display": "flex",
            "flexDirection": "row",
          },
          "width": "400px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sasuke",
              "style": Object {
                "flex": 1,
                "textAlign": "left",
              },
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Players: ",
                1,
                " / ",
                1,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Players: ",
              1,
              " / ",
              1,
            ],
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render PartyButton should render as expected without nickname 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButton
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      }
    }
    player={
      Object {
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <styled.button
        className="join-button"
        disabled={true}
        margin="10px"
        primary={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
          }
        }
        width="400px"
      >
        <div
          style={
            Object {
              "flex": 1,
              "textAlign": "left",
            }
          }
        >
          Sasuke
        </div>
        <div>
          Players: 
          1
           / 
          10
        </div>
      </styled.button>,
      "party": Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": false,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 10,
      },
      "player": Object {
        "socketId": "toto",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>,
          <div>
            Players: 
            1
             / 
            10
          </div>,
          undefined,
        ],
        "className": "join-button",
        "disabled": true,
        "margin": "10px",
        "primary": true,
        "style": Object {
          "display": "flex",
          "flexDirection": "row",
        },
        "width": "400px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sasuke",
            "style": Object {
              "flex": 1,
              "textAlign": "left",
            },
          },
          "ref": null,
          "rendered": "Sasuke",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Players: ",
            1,
            " / ",
            10,
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <styled.button
          className="join-button"
          disabled={true}
          margin="10px"
          primary={true}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
          width="400px"
        >
          <div
            style={
              Object {
                "flex": 1,
                "textAlign": "left",
              }
            }
          >
            Sasuke
          </div>
          <div>
            Players: 
            1
             / 
            10
          </div>
        </styled.button>,
        "party": Object {
          "__v": 3,
          "_id": "5a73305e4dbfed22aa7d0df5",
          "name": "Sasuke",
          "open": false,
          "players": Array [
            Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          ],
          "playing": false,
          "size": 10,
        },
        "player": Object {
          "socketId": "toto",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "flex": 1,
                  "textAlign": "left",
                }
              }
            >
              Sasuke
            </div>,
            <div>
              Players: 
              1
               / 
              10
            </div>,
            undefined,
          ],
          "className": "join-button",
          "disabled": true,
          "margin": "10px",
          "primary": true,
          "style": Object {
            "display": "flex",
            "flexDirection": "row",
          },
          "width": "400px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sasuke",
              "style": Object {
                "flex": 1,
                "textAlign": "left",
              },
            },
            "ref": null,
            "rendered": "Sasuke",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Players: ",
                1,
                " / ",
                10,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Players: ",
              1,
              " / ",
              10,
            ],
            "type": "div",
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render PartyButtonLink should render as expected when game is joinable 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButtonLink
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 2,
      }
    }
    player={
      Object {
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": undefined,
      "style": Object {
        "textDecoration": "none",
      },
      "to": "/#Sasuke[Unknown]",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": undefined,
        "style": Object {
          "textDecoration": "none",
        },
        "to": "/#Sasuke[Unknown]",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render PartyButtonLink should render as expected when game is not joinable 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyButtonLink
    party={
      Object {
        "__v": 3,
        "_id": "5a73305e4dbfed22aa7d0df5",
        "name": "Sasuke",
        "open": true,
        "players": Array [
          Object {
            "_id": "5a73305e4dbfed22aa7d0df6",
            "nickname": "Sakura",
            "socketId": "wcnjn-T8ENU4iD1XAAAC",
          },
        ],
        "playing": false,
        "size": 1,
      }
    }
    player={
      Object {
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": undefined,
      "replace": false,
      "style": Object {
        "pointerEvents": "none",
        "textDecoration": "none",
      },
      "to": "/#Sasuke[Unknown]",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": undefined,
        "replace": false,
        "style": Object {
          "pointerEvents": "none",
          "textDecoration": "none",
        },
        "to": "/#Sasuke[Unknown]",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render should render as expected with no parties 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyList
    goToParty={[Function]}
    partyList={Array []}
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div />
        <div>
          <NoParties />
        </div>
        <styled.div />
      </styled.div>,
      "padding": "40px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <div>
            <NoParties />
          </div>,
          <styled.div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NoParties />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div />
          <div>
            <NoParties />
          </div>
          <styled.div />
        </styled.div>,
        "padding": "40px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div>
              <NoParties />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NoParties />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views PartyList render should render as expected with parties 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyList
    goToParty={[Function]}
    partyList={
      Array [
        Object {
          "__v": 3,
          "_id": "5a73305e4dbfed22aa7d0df5",
          "name": "Sasuke",
          "open": false,
          "players": Array [
            Object {
              "_id": "5a73305e4dbfed22aa7d0df6",
              "nickname": "Sakura",
              "socketId": "wcnjn-T8ENU4iD1XAAAC",
            },
          ],
          "playing": false,
          "size": 10,
        },
      ]
    }
    player={
      Object {
        "nickname": "Naruto",
        "socketId": "toto",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <styled.div />
        <div>
          <PartyListMap
            partyList={
              Array [
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                },
              ]
            }
            player={
              Object {
                "nickname": "Naruto",
                "socketId": "toto",
              }
            }
          />
        </div>
        <styled.div />
      </styled.div>,
      "padding": "40px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <div>
            <PartyListMap
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />
          </div>,
          <styled.div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <PartyListMap
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "partyList": Array [
                Object {
                  "__v": 3,
                  "_id": "5a73305e4dbfed22aa7d0df5",
                  "name": "Sasuke",
                  "open": false,
                  "players": Array [
                    Object {
                      "_id": "5a73305e4dbfed22aa7d0df6",
                      "nickname": "Sakura",
                      "socketId": "wcnjn-T8ENU4iD1XAAAC",
                    },
                  ],
                  "playing": false,
                  "size": 10,
                },
              ],
              "player": Object {
                "nickname": "Naruto",
                "socketId": "toto",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <styled.div />
          <div>
            <PartyListMap
              partyList={
                Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ]
              }
              player={
                Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                }
              }
            />
          </div>
          <styled.div />
        </styled.div>,
        "padding": "40px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div />,
            <div>
              <PartyListMap
                partyList={
                  Array [
                    Object {
                      "__v": 3,
                      "_id": "5a73305e4dbfed22aa7d0df5",
                      "name": "Sasuke",
                      "open": false,
                      "players": Array [
                        Object {
                          "_id": "5a73305e4dbfed22aa7d0df6",
                          "nickname": "Sakura",
                          "socketId": "wcnjn-T8ENU4iD1XAAAC",
                        },
                      ],
                      "playing": false,
                      "size": 10,
                    },
                  ]
                }
                player={
                  Object {
                    "nickname": "Naruto",
                    "socketId": "toto",
                  }
                }
              />
            </div>,
            <styled.div />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <PartyListMap
                partyList={
                  Array [
                    Object {
                      "__v": 3,
                      "_id": "5a73305e4dbfed22aa7d0df5",
                      "name": "Sasuke",
                      "open": false,
                      "players": Array [
                        Object {
                          "_id": "5a73305e4dbfed22aa7d0df6",
                          "nickname": "Sakura",
                          "socketId": "wcnjn-T8ENU4iD1XAAAC",
                        },
                      ],
                      "playing": false,
                      "size": 10,
                    },
                  ]
                }
                player={
                  Object {
                    "nickname": "Naruto",
                    "socketId": "toto",
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "partyList": Array [
                  Object {
                    "__v": 3,
                    "_id": "5a73305e4dbfed22aa7d0df5",
                    "name": "Sasuke",
                    "open": false,
                    "players": Array [
                      Object {
                        "_id": "5a73305e4dbfed22aa7d0df6",
                        "nickname": "Sakura",
                        "socketId": "wcnjn-T8ENU4iD1XAAAC",
                      },
                    ],
                    "playing": false,
                    "size": 10,
                  },
                ],
                "player": Object {
                  "nickname": "Naruto",
                  "socketId": "toto",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Views Ranking should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Ranking
    ranking={
      Array [
        Object {
          "date": "djhbva",
          "playerName": "test",
          "score": 0,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Ranks
        ranking={
          Array [
            Object {
              "date": "djhbva",
              "playerName": "test",
              "score": 0,
            },
          ]
        }
      />,
      "padding": "20px",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "ranking": Array [
          Object {
            "date": "djhbva",
            "playerName": "test",
            "score": 0,
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Ranks
          ranking={
            Array [
              Object {
                "date": "djhbva",
                "playerName": "test",
                "score": 0,
              },
            ]
          }
        />,
        "padding": "20px",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "ranking": Array [
            Object {
              "date": "djhbva",
              "playerName": "test",
              "score": 0,
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
