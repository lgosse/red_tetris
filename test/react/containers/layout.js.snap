// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Alert Component rendering should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Alert
    alert={
      Object {
        "message": "SASUUUKEEEE",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "SASUUUKEEEE",
      "className": "show",
    },
    "ref": null,
    "rendered": "SASUUUKEEEE",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "SASUUUKEEEE",
        "className": "show",
      },
      "ref": null,
      "rendered": "SASUUUKEEEE",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Alert Component rendering should render as expected with message 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Alert
    alert={
      Object {
        "message": "SASUUUKEEEE",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "SASUUUKEEEE",
      "className": "show",
    },
    "ref": null,
    "rendered": "SASUUUKEEEE",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "SASUUUKEEEE",
        "className": "show",
      },
      "ref": null,
      "rendered": "SASUUUKEEEE",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Alert Component rendering should render as expected without message 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Alert
    alert={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`App Component rendering should render 1`] = `
<div>
  <Connect(Navbar) />
  <styled.div />
  <Footer />
  <Connect(Alert) />
</div>
`;

exports[`Footer Component rendering should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div />,
        <styled.div
          gameFont={true}
          size="16px"
        >
          Made with 
          <Styled(FaIcon)
            className="terminal"
          />
           by lgosse and tbayet
        </styled.div>,
      ],
      "padding": "20px",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            "Made with ",
            <Styled(FaIcon)
              className="terminal"
            />,
            " by lgosse and tbayet",
          ],
          "gameFont": true,
          "size": "16px",
        },
        "ref": null,
        "rendered": Array [
          "Made with ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "terminal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          " by lgosse and tbayet",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div />,
          <styled.div
            gameFont={true}
            size="16px"
          >
            Made with 
            <Styled(FaIcon)
              className="terminal"
            />
             by lgosse and tbayet
          </styled.div>,
        ],
        "padding": "20px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "Made with ",
              <Styled(FaIcon)
                className="terminal"
              />,
              " by lgosse and tbayet",
            ],
            "gameFont": true,
            "size": "16px",
          },
          "ref": null,
          "rendered": Array [
            "Made with ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "terminal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " by lgosse and tbayet",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Navbar Component rendering should render as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.span>
          RED TETRIS
        </styled.span>,
        <styled.div />,
        <Link
          id="home-link"
          replace={false}
          to="/"
        >
          <styled.button>
            <i
              className="fa fa-home"
            />
             HOME
          </styled.button>
        </Link>,
        <Link
          id="ranking-link"
          replace={false}
          to="ranking"
        >
          <styled.button>
            <i
              className="fa fa-trophy"
            />
             RANKING
          </styled.button>
        </Link>,
        <Link
          id="new-game-link"
          replace={false}
          to="new-game"
        >
          <styled.button>
            <i
              className="fa fa-plus"
            />
             PLAY
          </styled.button>
        </Link>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "RED TETRIS",
        },
        "ref": null,
        "rendered": "RED TETRIS",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.button>
            <i
              className="fa fa-home"
            />
             HOME
          </styled.button>,
          "id": "home-link",
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-home"
              />,
              " HOME",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-home",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " HOME",
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.button>
            <i
              className="fa fa-trophy"
            />
             RANKING
          </styled.button>,
          "id": "ranking-link",
          "replace": false,
          "to": "ranking",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-trophy"
              />,
              " RANKING",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-trophy",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " RANKING",
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.button>
            <i
              className="fa fa-plus"
            />
             PLAY
          </styled.button>,
          "id": "new-game-link",
          "replace": false,
          "to": "new-game",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-plus"
              />,
              " PLAY",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-plus",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " PLAY",
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.span>
            RED TETRIS
          </styled.span>,
          <styled.div />,
          <Link
            id="home-link"
            replace={false}
            to="/"
          >
            <styled.button>
              <i
                className="fa fa-home"
              />
               HOME
            </styled.button>
          </Link>,
          <Link
            id="ranking-link"
            replace={false}
            to="ranking"
          >
            <styled.button>
              <i
                className="fa fa-trophy"
              />
               RANKING
            </styled.button>
          </Link>,
          <Link
            id="new-game-link"
            replace={false}
            to="new-game"
          >
            <styled.button>
              <i
                className="fa fa-plus"
              />
               PLAY
            </styled.button>
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "RED TETRIS",
          },
          "ref": null,
          "rendered": "RED TETRIS",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.button>
              <i
                className="fa fa-home"
              />
               HOME
            </styled.button>,
            "id": "home-link",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-home"
                />,
                " HOME",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-home",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              " HOME",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.button>
              <i
                className="fa fa-trophy"
              />
               RANKING
            </styled.button>,
            "id": "ranking-link",
            "replace": false,
            "to": "ranking",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-trophy"
                />,
                " RANKING",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-trophy",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              " RANKING",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.button>
              <i
                className="fa fa-plus"
              />
               PLAY
            </styled.button>,
            "id": "new-game-link",
            "replace": false,
            "to": "new-game",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-plus"
                />,
                " PLAY",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-plus",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              " PLAY",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
